from typing import List

from db import Order
from db.db_utils import db_get_cart_products


def text_for_caption(name, desc, price):
    text = (
        f"<b>{name}</b>\n\n"
        f"<b>–ò–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã:</b> {desc}\n"
        f"<b>–¶–µ–Ω–∞:</b> {price} –≥—Ä–Ω."
    )
    return text


def basket_text(chat_id, user_text):
    products = db_get_cart_products(chat_id)
    if products:
        text = f"{user_text}\n\n"
        total_products = total_price = count = 0
        for name, quantity, price, cart_id in products:
            count += 1
            total_products += quantity
            total_price += price
            text += f"{count}. {name}\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity}\n –°—Ç–æ–∏–º–æ—Å—Ç—å: {price}\n\n"

        text += (
            f"–û–±—â–µ–µ –∫–æ–ª-–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {total_products}\n"
            f"–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {total_price}\n"
        )
        context = (count, text, total_price, cart_id)
        return context
    return None


def format_order_history_text(orders: List[Order]) -> str:
    if not orders:
        return "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤."

    lines = ["üìú –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤:\n"]
    for order in orders:
        lines.append(
            f"<b>–ó–∞–∫–∞–∑ ‚Ññ</b>{order.id} | –î–∞—Ç–∞: {order.created_at.strftime('%Y-%m-%d %H:%M')}"
        )
        lines.append(f"–ò—Ç–æ–≥–æ: {order.total_price} –≥—Ä–Ω.")
        lines.append("–¢–æ–≤–∞—Ä—ã:")
        for item in order.items:
            lines.append(
                f"  - {item.product_name} x{item.quantity} –ø–æ {item.price} –≥—Ä–Ω."
            )
        lines.append("")  # –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –º–µ–∂–¥—É –∑–∞–∫–∞–∑–∞–º–∏

    return "\n".join(lines)
